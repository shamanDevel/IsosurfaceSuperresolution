//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_75
.address_size 64

	// .globl	kernelFillTex
.global .texref volTexInC;
.global .texref volTexInF;
.global .surfref volTexOut;

.visible .entry kernelFillTex(
	.param .align 4 .b8 kernelFillTex_param_0[12],
	.param .u32 kernelFillTex_param_1
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<2>;


	ld.param.u32 	%r6, [kernelFillTex_param_0+8];
	ld.param.u32 	%r5, [kernelFillTex_param_0+4];
	ld.param.u32 	%r4, [kernelFillTex_param_0];
	ld.param.u32 	%r7, [kernelFillTex_param_1];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %ntid.z;
	mov.u32 	%r13, %ctaid.z;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r14;
	mov.u32 	%r15, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r15;
	mov.u32 	%r16, %tid.z;
	mad.lo.s32 	%r3, %r12, %r13, %r16;
	mov.pred 	%p7, -1;
	setp.ge.u32	%p4, %r1, %r4;
	@%p4 bra 	BB0_2;

	setp.ge.u32	%p7, %r2, %r5;

BB0_2:
	setp.ge.u32	%p5, %r3, %r6;
	or.pred  	%p6, %p7, %p5;
	@%p6 bra 	BB0_4;

	mul.lo.s32 	%r17, %r1, %r7;
	mov.u32 	%r18, 0;
	sust.b.3d.b32.trap 	[volTexOut, {%r17, %r2, %r3, %r3}], {%r18};

BB0_4:
	ret;
}

	// .globl	kernelCopyTexC
.visible .entry kernelCopyTexC(
	.param .align 4 .b8 kernelCopyTexC_param_0[12],
	.param .align 4 .b8 kernelCopyTexC_param_1[12]
)
{
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<3>;


	ld.param.u32 	%r6, [kernelCopyTexC_param_0+8];
	ld.param.u32 	%r5, [kernelCopyTexC_param_0+4];
	ld.param.u32 	%r4, [kernelCopyTexC_param_0];
	ld.param.u32 	%r9, [kernelCopyTexC_param_1+8];
	ld.param.u32 	%r8, [kernelCopyTexC_param_1+4];
	ld.param.u32 	%r7, [kernelCopyTexC_param_1];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ntid.z;
	mov.u32 	%r15, %ctaid.z;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r16;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r2, %r12, %r13, %r17;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r3, %r14, %r15, %r18;
	mov.pred 	%p7, -1;
	setp.ge.u32	%p4, %r1, %r7;
	@%p4 bra 	BB1_2;

	setp.ge.u32	%p7, %r2, %r8;

BB1_2:
	setp.ge.u32	%p5, %r3, %r9;
	or.pred  	%p6, %p7, %p5;
	@%p6 bra 	BB1_4;

	cvt.rn.f32.u32	%f1, %r3;
	cvt.rn.f32.u32	%f2, %r2;
	cvt.rn.f32.u32	%f3, %r1;
	tex.3d.v4.u32.f32	{%r19, %r20, %r21, %r22}, [volTexInC, {%f3, %f2, %f1, %f1}];
	cvt.u16.u32	%rs1, %r19;
	and.b16  	%rs2, %rs1, 255;
	add.s32 	%r23, %r3, %r6;
	add.s32 	%r24, %r2, %r5;
	add.s32 	%r25, %r1, %r4;
	sust.b.3d.b8.trap 	[volTexOut, {%r25, %r24, %r23, %r23}], {%rs2};

BB1_4:
	ret;
}

	// .globl	kernelCopyTexF
.visible .entry kernelCopyTexF(
	.param .align 4 .b8 kernelCopyTexF_param_0[12],
	.param .align 4 .b8 kernelCopyTexF_param_1[12]
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<3>;


	ld.param.u32 	%r6, [kernelCopyTexF_param_0+8];
	ld.param.u32 	%r5, [kernelCopyTexF_param_0+4];
	ld.param.u32 	%r4, [kernelCopyTexF_param_0];
	ld.param.u32 	%r9, [kernelCopyTexF_param_1+8];
	ld.param.u32 	%r8, [kernelCopyTexF_param_1+4];
	ld.param.u32 	%r7, [kernelCopyTexF_param_1];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ntid.z;
	mov.u32 	%r15, %ctaid.z;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r16;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r2, %r12, %r13, %r17;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r3, %r14, %r15, %r18;
	mov.pred 	%p7, -1;
	setp.ge.u32	%p4, %r1, %r7;
	@%p4 bra 	BB2_2;

	setp.ge.u32	%p7, %r2, %r8;

BB2_2:
	setp.ge.u32	%p5, %r3, %r9;
	or.pred  	%p6, %p7, %p5;
	@%p6 bra 	BB2_4;

	cvt.rn.f32.u32	%f1, %r3;
	cvt.rn.f32.u32	%f2, %r2;
	cvt.rn.f32.u32	%f3, %r1;
	tex.3d.v4.f32.f32	{%f4, %f5, %f6, %f7}, [volTexInF, {%f3, %f2, %f1, %f1}];
	add.s32 	%r19, %r1, %r4;
	shl.b32 	%r20, %r19, 2;
	mov.b32 	 %r21, %f4;
	add.s32 	%r22, %r3, %r6;
	add.s32 	%r23, %r2, %r5;
	sust.b.3d.b32.trap 	[volTexOut, {%r20, %r23, %r22, %r22}], {%r21};

BB2_4:
	ret;
}

	// .globl	kernelCopyBufToTexC
.visible .entry kernelCopyBufToTexC(
	.param .align 4 .b8 kernelCopyBufToTexC_param_0[12],
	.param .align 4 .b8 kernelCopyBufToTexC_param_1[12],
	.param .u64 kernelCopyBufToTexC_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r8, [kernelCopyBufToTexC_param_0+8];
	ld.param.u32 	%r7, [kernelCopyBufToTexC_param_0+4];
	ld.param.u32 	%r6, [kernelCopyBufToTexC_param_0];
	ld.param.u32 	%r9, [kernelCopyBufToTexC_param_1+8];
	ld.param.u32 	%r1, [kernelCopyBufToTexC_param_1];
	ld.param.u32 	%r5, [kernelCopyBufToTexC_param_1+4];
	ld.param.u64 	%rd1, [kernelCopyBufToTexC_param_2];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ntid.z;
	mov.u32 	%r15, %ctaid.z;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r2, %r10, %r11, %r16;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r3, %r12, %r13, %r17;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r4, %r14, %r15, %r18;
	setp.ge.u32	%p1, %r3, %r5;
	setp.ge.u32	%p2, %r2, %r1;
	or.pred  	%p3, %p1, %p2;
	setp.ge.u32	%p4, %r4, %r9;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB3_2;

	mad.lo.s32 	%r19, %r4, %r5, %r3;
	mad.lo.s32 	%r20, %r19, %r1, %r2;
	cvt.u64.u32	%rd3, %r20;
	cvta.to.global.u64 	%rd4, %rd1;
	add.s64 	%rd5, %rd4, %rd3;
	add.s32 	%r21, %r2, %r6;
	add.s32 	%r22, %r3, %r7;
	add.s32 	%r23, %r4, %r8;
	ld.global.u8 	%rs1, [%rd5];
	sust.b.3d.b8.trap 	[volTexOut, {%r21, %r22, %r23, %r23}], {%rs1};

BB3_2:
	ret;
}

	// .globl	kernelCopyBufToTexF
.visible .entry kernelCopyBufToTexF(
	.param .align 4 .b8 kernelCopyBufToTexF_param_0[12],
	.param .align 4 .b8 kernelCopyBufToTexF_param_1[12],
	.param .u64 kernelCopyBufToTexF_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r8, [kernelCopyBufToTexF_param_0+8];
	ld.param.u32 	%r7, [kernelCopyBufToTexF_param_0+4];
	ld.param.u32 	%r6, [kernelCopyBufToTexF_param_0];
	ld.param.u32 	%r9, [kernelCopyBufToTexF_param_1+8];
	ld.param.u32 	%r1, [kernelCopyBufToTexF_param_1];
	ld.param.u32 	%r5, [kernelCopyBufToTexF_param_1+4];
	ld.param.u64 	%rd1, [kernelCopyBufToTexF_param_2];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ntid.z;
	mov.u32 	%r15, %ctaid.z;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r2, %r10, %r11, %r16;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r3, %r12, %r13, %r17;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r4, %r14, %r15, %r18;
	setp.ge.u32	%p1, %r3, %r5;
	setp.ge.u32	%p2, %r2, %r1;
	or.pred  	%p3, %p1, %p2;
	setp.ge.u32	%p4, %r4, %r9;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB4_2;

	mad.lo.s32 	%r19, %r4, %r5, %r3;
	mad.lo.s32 	%r20, %r19, %r1, %r2;
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r20, 4;
	add.s64 	%rd5, %rd3, %rd4;
	add.s32 	%r21, %r2, %r6;
	shl.b32 	%r22, %r21, 2;
	add.s32 	%r23, %r3, %r7;
	add.s32 	%r24, %r4, %r8;
	ld.global.u32 	%r25, [%rd5];
	sust.b.3d.b32.trap 	[volTexOut, {%r22, %r23, %r24, %r24}], {%r25};

BB4_2:
	ret;
}

	// .globl	kernelCopyTexZYX
.visible .entry kernelCopyTexZYX(
	.param .align 4 .b8 kernelCopyTexZYX_param_0[12],
	.param .align 4 .b8 kernelCopyTexZYX_param_1[12]
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<3>;


	ld.param.u32 	%r6, [kernelCopyTexZYX_param_0+8];
	ld.param.u32 	%r5, [kernelCopyTexZYX_param_0+4];
	ld.param.u32 	%r4, [kernelCopyTexZYX_param_0];
	ld.param.u32 	%r9, [kernelCopyTexZYX_param_1+8];
	ld.param.u32 	%r8, [kernelCopyTexZYX_param_1+4];
	ld.param.u32 	%r7, [kernelCopyTexZYX_param_1];
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ntid.z;
	mov.u32 	%r15, %ctaid.z;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r16;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r2, %r12, %r13, %r17;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r3, %r14, %r15, %r18;
	mov.pred 	%p7, -1;
	setp.ge.u32	%p4, %r1, %r7;
	@%p4 bra 	BB5_2;

	setp.ge.u32	%p7, %r2, %r8;

BB5_2:
	setp.ge.u32	%p5, %r3, %r9;
	or.pred  	%p6, %p7, %p5;
	@%p6 bra 	BB5_4;

	cvt.rn.f32.u32	%f1, %r1;
	cvt.rn.f32.u32	%f2, %r2;
	cvt.rn.f32.u32	%f3, %r3;
	tex.3d.v4.f32.f32	{%f4, %f5, %f6, %f7}, [volTexInF, {%f3, %f2, %f1, %f1}];
	add.s32 	%r19, %r1, %r4;
	shl.b32 	%r20, %r19, 2;
	mov.b32 	 %r21, %f4;
	add.s32 	%r22, %r3, %r6;
	add.s32 	%r23, %r2, %r5;
	sust.b.3d.b32.trap 	[volTexOut, {%r20, %r23, %r22, %r22}], {%r21};

BB5_4:
	ret;
}

	// .globl	kernelRetrieveTexXYZ
.visible .entry kernelRetrieveTexXYZ(
	.param .align 4 .b8 kernelRetrieveTexXYZ_param_0[12],
	.param .align 4 .b8 kernelRetrieveTexXYZ_param_1[12],
	.param .align 4 .b8 kernelRetrieveTexXYZ_param_2[12],
	.param .u64 kernelRetrieveTexXYZ_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r6, [kernelRetrieveTexXYZ_param_0+8];
	ld.param.u32 	%r5, [kernelRetrieveTexXYZ_param_0+4];
	ld.param.u32 	%r4, [kernelRetrieveTexXYZ_param_0];
	ld.param.u32 	%r9, [kernelRetrieveTexXYZ_param_1+8];
	ld.param.u32 	%r8, [kernelRetrieveTexXYZ_param_1+4];
	ld.param.u32 	%r7, [kernelRetrieveTexXYZ_param_1];
	ld.param.u32 	%r11, [kernelRetrieveTexXYZ_param_2+4];
	ld.param.u32 	%r10, [kernelRetrieveTexXYZ_param_2];
	ld.param.u64 	%rd1, [kernelRetrieveTexXYZ_param_3];
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %ctaid.z;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r19;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r15, %r16, %r20;
	mov.u32 	%r21, %tid.z;
	mad.lo.s32 	%r3, %r17, %r18, %r21;
	mov.pred 	%p7, -1;
	setp.ge.u32	%p4, %r1, %r7;
	@%p4 bra 	BB6_2;

	setp.ge.u32	%p7, %r2, %r8;

BB6_2:
	setp.ge.u32	%p5, %r3, %r9;
	or.pred  	%p6, %p7, %p5;
	@%p6 bra 	BB6_4;

	add.s32 	%r22, %r1, %r4;
	cvt.rn.f32.u32	%f1, %r22;
	add.s32 	%r23, %r2, %r5;
	cvt.rn.f32.u32	%f2, %r23;
	add.s32 	%r24, %r3, %r6;
	cvt.rn.f32.u32	%f3, %r24;
	tex.3d.v4.f32.f32	{%f4, %f5, %f6, %f7}, [volTexInF, {%f1, %f2, %f3, %f3}];
	mad.lo.s32 	%r25, %r1, %r11, %r2;
	mad.lo.s32 	%r26, %r25, %r10, %r3;
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r26, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.global.f32 	[%rd5], %f4;

BB6_4:
	ret;
}

	// .globl	kernelSliceTexToBufF
.visible .entry kernelSliceTexToBufF(
	.param .u32 kernelSliceTexToBufF_param_0,
	.param .align 4 .b8 kernelSliceTexToBufF_param_1[12],
	.param .u64 kernelSliceTexToBufF_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r4, [kernelSliceTexToBufF_param_0];
	ld.param.u32 	%r5, [kernelSliceTexToBufF_param_1+4];
	ld.param.u32 	%r1, [kernelSliceTexToBufF_param_1];
	ld.param.u64 	%rd1, [kernelSliceTexToBufF_param_2];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r2, %r6, %r7, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r3, %r9, %r10, %r11;
	setp.ge.s32	%p1, %r2, %r1;
	setp.ge.s32	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB7_2;

	cvt.rn.f32.s32	%f1, %r4;
	cvt.rn.f32.s32	%f2, %r3;
	cvt.rn.f32.s32	%f3, %r2;
	tex.3d.v4.f32.f32	{%f4, %f5, %f6, %f7}, [volTexInF, {%f3, %f2, %f1, %f1}];
	mad.lo.s32 	%r12, %r3, %r1, %r2;
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r12, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.global.f32 	[%rd5], %f4;

BB7_2:
	ret;
}

	// .globl	kernelSliceTexToBufC
.visible .entry kernelSliceTexToBufC(
	.param .u32 kernelSliceTexToBufC_param_0,
	.param .align 4 .b8 kernelSliceTexToBufC_param_1[12],
	.param .u64 kernelSliceTexToBufC_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r4, [kernelSliceTexToBufC_param_0];
	ld.param.u32 	%r5, [kernelSliceTexToBufC_param_1+4];
	ld.param.u32 	%r1, [kernelSliceTexToBufC_param_1];
	ld.param.u64 	%rd1, [kernelSliceTexToBufC_param_2];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r2, %r6, %r7, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r3, %r9, %r10, %r11;
	setp.ge.s32	%p1, %r2, %r1;
	setp.ge.s32	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB8_2;

	cvt.rn.f32.s32	%f1, %r4;
	cvt.rn.f32.s32	%f2, %r3;
	cvt.rn.f32.s32	%f3, %r2;
	tex.3d.v4.u32.f32	{%r12, %r13, %r14, %r15}, [volTexInC, {%f3, %f2, %f1, %f1}];
	mad.lo.s32 	%r16, %r3, %r1, %r2;
	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32	%rd4, %r16;
	add.s64 	%rd5, %rd3, %rd4;
	st.global.u8 	[%rd5], %r12;

BB8_2:
	ret;
}

	// .globl	kernelSliceBufToTexF
.visible .entry kernelSliceBufToTexF(
	.param .u32 kernelSliceBufToTexF_param_0,
	.param .align 4 .b8 kernelSliceBufToTexF_param_1[12],
	.param .u64 kernelSliceBufToTexF_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r4, [kernelSliceBufToTexF_param_0];
	ld.param.u32 	%r5, [kernelSliceBufToTexF_param_1+4];
	ld.param.u32 	%r1, [kernelSliceBufToTexF_param_1];
	ld.param.u64 	%rd1, [kernelSliceBufToTexF_param_2];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r2, %r6, %r7, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r3, %r9, %r10, %r11;
	setp.ge.s32	%p1, %r2, %r1;
	setp.ge.s32	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB9_2;

	mad.lo.s32 	%r12, %r3, %r1, %r2;
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r12, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u32 	%r13, [%rd5];
	shl.b32 	%r14, %r2, 2;
	sust.b.3d.b32.trap 	[volTexOut, {%r14, %r3, %r4, %r4}], {%r13};

BB9_2:
	ret;
}

	// .globl	kernelSliceBufToTexC
.visible .entry kernelSliceBufToTexC(
	.param .u32 kernelSliceBufToTexC_param_0,
	.param .align 4 .b8 kernelSliceBufToTexC_param_1[12],
	.param .u64 kernelSliceBufToTexC_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r4, [kernelSliceBufToTexC_param_0];
	ld.param.u32 	%r5, [kernelSliceBufToTexC_param_1+4];
	ld.param.u32 	%r1, [kernelSliceBufToTexC_param_1];
	ld.param.u64 	%rd1, [kernelSliceBufToTexC_param_2];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r2, %r6, %r7, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r3, %r9, %r10, %r11;
	setp.ge.s32	%p1, %r2, %r1;
	setp.ge.s32	%p2, %r3, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB10_2;

	mad.lo.s32 	%r12, %r3, %r1, %r2;
	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32	%rd4, %r12;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.u8 	%rs1, [%rd5];
	sust.b.3d.b8.trap 	[volTexOut, {%r2, %r3, %r4, %r4}], {%rs1};

BB10_2:
	ret;
}


